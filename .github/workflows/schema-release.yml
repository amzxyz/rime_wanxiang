name: Release Schema
on:
  push:
    tags:
      - 'v*'   # Ëß¶ÂèëÔºö‰ª• v ÂºÄÂ§¥ÁöÑÊ†áÁ≠æÔºåÂ¶Ç v1.0.0

concurrency:
  group: release-standard
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Extract tag version
        id: extract_tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          echo "RELEASE_TITLE=${TAG_VERSION} Rime‰∏áË±°ÊãºÈü≥ËæìÂÖ•ÊñπÊ°àÔºåÂÖ®Êñ∞ËØçÂ∫ìÔºåÂÖ®Êñ∞ËØ≠Ê≥ïÊ®°Âûã" >> $GITHUB_ENV


      - name: Pack standard version into rime-wanxiang.zip
        run: |
          mkdir -p dist
          # ÊõøÊç¢ default.yaml
          sed -i '/^[[:space:]]*- schema: wanxiang_pro$/d' default.yaml
          ROOT_FILES=$(find . -maxdepth 1 -type f \( -iname "*.yaml" -o -iname "*.txt" -o -iname "*.ini" -o -iname "*.md" -o -iname "*.png" -o -iname "*.jpg" \) \
          ! -iname "wanxiang_pro*" ! -iname "wanxiang_lookup*" ! -iname "wanxiang_charset*" ! -iname "default.yaml")

          zip -r dist/rime-wanxiang.zip \
            custom/wanxiang.custom.yaml \
            custom/wanxiang_en.custom.yaml \
            custom/wanxiang_radical.custom.yaml \
            custom/*.md \
            custom/*.jpg \
            custom/*.png \
            en_dicts \
            jm_dicts \
            lua \
            opencc \
            zh_dicts \
            default.yaml \
            $ROOT_FILES

      - name: Process Rime PRO dicts using Python script
        run: |
          pip install --upgrade pip
          python custom/‰∏áË±°ÂàÜÂåÖ.py

      - name: Generate fuzhu scheme zip packages
        run: |
          mkdir -p dist
          declare -A types=(
            [zrm]=pro-zrm-fuzhu-dicts
            [moqi]=pro-moqi-fuzhu-dicts
            [flypy]=pro-flypy-fuzhu-dicts
            [jdh]=pro-jdh-fuzhu-dicts
            [hanxin]=pro-hanxin-fuzhu-dicts
            [wubi]=pro-wubi-fuzhu-dicts
            [tiger]=pro-tiger-fuzhu-dicts
          )

          for type in "${!types[@]}"; do
            dict_dir="${types[$type]}"
            mkdir -p zh_dicts_pro
            cp -r "$dict_dir/"* zh_dicts_pro/  # Â∞Ü dict Êñá‰ª∂Áõ¥Êé•Â§çÂà∂Ëøõ zh_dicts_proÔºåËÄåÈùûÂµåÂ•óÁõÆÂΩï

            # ÊõøÊç¢ default.yaml
            sed -i '/^[[:space:]]*- schema: wanxiang$/d' default.yaml

            # Á≤æÁÆÄ lookup Êñá‰ª∂
            python custom/lookupÂàÜÂåÖ.py $type

            # Â§çÂà∂ schema
            cp custom/È¢ÑËÆæÂàÜÂåÖÊñπÊ°à.yaml wanxiang_pro.schema.yaml

            # Ëé∑ÂèñÊ†πÁõÆÂΩïÈ¢ùÂ§ñË¶ÅÊâìÂåÖÁöÑÊñá‰ª∂ÔºàÊéíÈô§ÁâπÂÆöÂëΩÂêçÔºâ
            EXTRA_ROOT_FILES=$(find . -maxdepth 1 -type f \( -iname "*.yaml" -o -iname "*.txt" -o -iname "*.ini" -o -iname "*.md" -o -iname "*.png" -o -iname "*.jpg" \) \
            ! -iname "wanxiang_lookup*" \
            ! -iname "wanxiang_charset*" \
            ! -iname "wanxiang_pro*" \
            ! -iname "default.yaml" \
            ! -iname "wanxiang.schema.yaml" )
            # ÊâìÂåÖ
            zip -r "dist/rime-wanxiang-${type}-fuzhu.zip" \
              custom/wanxiang_pro.custom.yaml \
              custom/wanxiang_en.custom.yaml \
              custom/wanxiang_radical.custom.yaml \
              custom/*.md \
              custom/*.jpg \
              custom/*.png \
              en_dicts \
              jm_dicts \
              lua \
              opencc \
              zh_dicts_pro \
              wanxiang_pro.schema.yaml \
              wanxiang_pro.dict.yaml \
              default.yaml \
              wanxiang_lookup.dict.yaml \
              wanxiang_lookup.schema.yaml \
              $EXTRA_ROOT_FILES

            rm -rf zh_dicts_pro
            rm -f wanxiang_pro.schema.yaml

          done
    
      - name: Generate changelog from commits
        run: |
          echo "### ${RELEASE_HEADER}" > release_notes.md
          echo "---" >> release_notes.md
          echo "" >> release_notes.md
          echo "#### 1. Ê†áÂáÜÁâàËæìÂÖ•ÊñπÊ°à" >> release_notes.md
          echo "‚ú®**ÈÄÇÁî®Á±ªÂûãÔºö** ÊîØÊåÅÂÖ®Êãº„ÄÅÂêÑÁßçÂèåÊãº" >> release_notes.md
          echo "‚ú®**‰∏ãËΩΩÂú∞ÂùÄÔºö** [rime-wanxiang.zip](https://github.com/${{ github.repository }}/releases/download/${TAG_VERSION}/rime-wanxiang.zip)" >> release_notes.md
          echo "" >> release_notes.md
          echo "#### 2. ÂèåÊãºËæÖÂä©Á†ÅÂ¢ûÂº∫ÁâàËæìÂÖ•ÊñπÊ°à" >> release_notes.md
          echo "‚ú®**ÈÄÇÁî®Á±ªÂûãÔºö** ÊîØÊåÅÂêÑÁßçÂèåÊãº+ËæÖÂä©Á†ÅÁöÑËá™Áî±ÁªÑÂêà" >> release_notes.md
          for type in zrm moqi flypy jdh hanxin wubi tiger; do
            echo "- **${type^^} ËæÖÂä©ÁâàÊú¨Ôºö** [rime-wanxiang-${type}-fuzhu.zip](https://github.com/${{ github.repository }}/releases/download/${TAG_VERSION}/rime-wanxiang-${type}-fuzhu.zip)" >> release_notes.md
          done
          echo "" >> release_notes.md
          echo "#### 3. ËØ≠Ê≥ïÊ®°Âûã" >> release_notes.md
          echo "‚ú®**ÈÄÇÁî®Á±ªÂûãÔºö** ÊâÄÊúâÁâàÊú¨ÁöÜÂèØÁî®" >> release_notes.md
          echo "‚ú®**‰∏ãËΩΩÂú∞ÂùÄÔºö** [wanxiang-lts-zh-hans.gram](https://github.com/amzxyz/RIME-LMDG/releases/download/LTS/wanxiang-lts-zh-hans.gram)" >> release_notes.md
          echo "" >> release_notes.md
          echo "#### üìù Êõ¥Êñ∞Êó•Âøó" >> release_notes.md
          git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md
          echo "" >> release_notes.md
          echo "---" >> release_notes.md
          echo "üìñ ‰ΩøÁî®ËØ¥Êòé‰∏éÈÖçÁΩÆÊïôÁ®ãËØ∑Êü•Áúã‰ªìÂ∫ì‰∏≠ÁöÑ README.md" >> release_notes.md

      - name: Create Release and Upload
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_TITLE }}         #ÂèëÂ∏ÉÈ°µÊ†áÈ¢ò
          tag_name: ${{ github.ref_name }}
          files: |
            dist/rime-wanxiang.zip
            dist/rime-wanxiang-*.zip
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
