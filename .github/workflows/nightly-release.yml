name: Nightly Build dicts

on:
  workflow_dispatch: # 手动触发
  push:
    branches:
      - wanxiang
    paths:
      - "dicts/**"

concurrency: # 防止并发冲突
  group: nightly-release
  cancel-in-progress: true

jobs:
  nightly-release:
    runs-on: ubuntu-22.04

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 检查指定文件夹或文件是否有变动
      - name: Check if dicts or wanxiang-lts-zh-hans.gram has changes
        id: check_changes
        run: |
          if git diff --quiet HEAD HEAD~1 -- dicts wanxiang-lts-zh-hans.gram; then
            echo "SKIP=true" >> $GITHUB_ENV
          else
            echo "SKIP=false" >> $GITHUB_ENV
          fi
      # 3. 条件跳过任务
      - name: Skip if no changes
        if: env.SKIP == 'true'
        run: echo "No changes detected in 'dicts' or 'wanxiang-lts-zh-hans.gram'. Skipping release process."

      # 4. 安装 Python（确保我们能够调用 Python 脚本）
      - name: Setup Python
        if: env.SKIP != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      # 5. 运行Python 脚本对 dicts 进行处理，生成多个词库文件夹
      - name: Process Rime dicts
        if: env.SKIP != 'true'
        run: |
          echo "Processing dicts with Python script..."
          pip install --upgrade pip
          python .github/workflows/scripts/万象分包.py
          echo "Done"

          # 处理 all dicts 与 base dicts
          echo "Processing pro_all dicts and base dicts"
          mkdir -p pro-all-dicts
          mkdir -p base-dicts
          echo "Copy dicts..."
          if [ -d "dicts" ]; then
            cd dicts
            cp correlation.pro.dict.yaml \
               base.pro.dict.yaml \
               chars.pro.dict.yaml \
               compatible.pro.dict.yaml \
               corrections.pro.dict.yaml \
               place.pro.dict.yaml \
               poetry.pro.dict.yaml \
               suggestion.pro.dict.yaml \
               ../pro-all-dicts
            cp correlation.dict.yaml \
               base.dict.yaml \
               chars.dict.yaml \
               compatible.dict.yaml \
               corrections.dict.yaml \
               place.dict.yaml \
               poetry.dict.yaml \
               suggestion.dict.yaml \
               ../base-dicts
            echo "Copy File completed"
            cd ..
          else
            echo "Error: dicts folder does not exist."
            exit 1
          fi

      # 6. 将拆分后的 9 个词库文件夹一并打包，并先复制通用文件
      - name: Pack splitted dicts
        if: env.SKIP != 'true'
        run: |
          echo "Packing splitted dict folders..."

          # 定义文件夹 -> ZIP文件名的映射关系
          declare -A dict_map=(
            ["pro-moqi-fuzhu-dicts"]="1-pro-moqi-fuzhu-dicts.zip"
            ["pro-flypy-fuzhu-dicts"]="2-pro-flypy-fuzhu-dicts.zip"
            ["pro-zrm-fuzhu-dicts"]="3-pro-zrm-fuzhu-dicts.zip"
            ["pro-jdh-fuzhu-dicts"]="4-pro-jdh-fuzhu-dicts.zip"
            ["pro-tiger-fuzhu-dicts"]="5-pro-tiger-fuzhu-dicts.zip"
            ["pro-wubi-fuzhu-dicts"]="6-pro-wubi-fuzhu-dicts.zip"
            ["pro-hanxin-fuzhu-dicts"]="7-pro-hanxin-fuzhu-dicts.zip"
            ["pro-all-dicts"]="8-pro-all-dicts.zip"
            ["base-dicts"]="9-base-dicts.zip"
          )

          mkdir -p dist

          # 遍历字典并按指定顺序命名 ZIP 文件
          for dict_dir in "${!dict_map[@]}"; do
            if [ -d "$dict_dir" ]; then
              echo "Copying common files into $dict_dir..."
              cp dicts/en.dict.yaml "$dict_dir"/
              cp dicts/cn\&en.dict.yaml "$dict_dir"/
              cp dicts/chengyu.txt "$dict_dir"/

              echo "Packing: ${dict_map[$dict_dir]}"
              zip -r "dist/${dict_map[$dict_dir]}" "$dict_dir"
              echo "Packed: dist/${dict_map[$dict_dir]}"
            else
              echo "Warning: $dict_dir folder does not exist. Skipped."
            fi
          done

      # 7. 删除旧的 Release 和 Tag
      - name: Delete existing Nightly Release and Tag
        if: env.SKIP != 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = "dict-nightly";
            try {
              // 检查现有的 Release
              const releases = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              const existingRelease = releases.data.find(r => r.tag_name === tag);
              if (existingRelease) {
                console.log(`Deleting existing Release with ID: ${existingRelease.id}`);
                await github.rest.repos.deleteRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: existingRelease.id
                });
              }

              // 删除现有的 Tag
              console.log(`Deleting tag: ${tag}`);
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tag}`
              });
            } catch (error) {
              console.log(`Error deleting Release or Tag: ${error.message}`);
            }

      # 8. 等待清理完成
      - name: Wait for cleanup
        if: env.SKIP != 'true'
        run: sleep 10
      # 安装 Node.js v18（为 action-gh-release 解决 node:fs::FileHandle 问题）
      - name: Setup Node.js 18
        if: env.SKIP != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      # 9. 创建新的 Release，并把上述打包好的所有文件都上传
      - name: Create new Release
        if: env.SKIP != 'true'
        uses: "softprops/action-gh-release@v2"
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: dict-nightly
          name: "实时提交的词库更新"
          body: |
            - **base-dicts.zip**：最新的标准版原始中文词库文件
            - **pro-all-dicts.zip**：最新的全辅助码原始中文词库文件
            - **pro-moqi-fuzhu-dicts.zip**：携带了墨奇辅助码的词库文件
            - **pro-flypy-fuzhu-dicts.zip**：携带了小鹤辅助码的词库文件
            - **pro-zrm-fuzhu-dicts.zip**：携带了自然码辅助码的词库文件
            - **pro-jdh-fuzhu-dicts.zip**：携带了简单鹤辅助码的词库文件
            - **pro-tiger-fuzhu-dicts.zip**：携带了虎码辅助码的词库文件
            - **pro-wubi-fuzhu-dicts.zip**：携带了五笔辅助码的词库文件
            - **pro-hanxin-fuzhu-dicts.zip**：携带了汉心辅助码的词库文件
            - **[wanxiang-lts-zh-hans.gram](https://github.com/amzxyz/RIME-LMDG/releases/download/LTS/wanxiang-lts-zh-hans.gram)**：与词库同步更新的语法模型
          files: |
            dist/1-pro-moqi-fuzhu-dicts.zip
            dist/2-pro-flypy-fuzhu-dicts.zip
            dist/3-pro-zrm-fuzhu-dicts.zip
            dist/4-pro-jdh-fuzhu-dicts.zip
            dist/5-pro-tiger-fuzhu-dicts.zip
            dist/6-pro-wubi-fuzhu-dicts.zip
            dist/7-pro-hanxin-fuzhu-dicts.zip
            dist/8-pro-all-dicts.zip
            dist/9-base-dicts.zip
            wanxiang-lts-zh-hans.gram
          draft: false
          prerelease: false
          make_latest: true
